{"version":3,"sources":["ui-lib/Autocomplete/HOC/keys.js","ui-lib/ListItem/ListItem.js","ui-lib/utils.js","ui-lib/Autocomplete/HOC/withAutocomplete.js","ui-lib/Autocomplete/Autocomplete.js","ui-lib/TextInput/TextInput.js","ui-lib/Button/Button.js","api/Models/book/index.js","lib/Trie/Trie.js","api/Models/search/index.js","api/controllers/bookController/utils.js","api/controllers/bookController/bookController.js","pages/SearchBox/SearchBox.js","ui-lib/Cell/Cell.js","ui-lib/Grid/Grid.js","pages/SearchHistory/SearchHistory.js","pages/SearchHistories/SearchHistories.js","App.js","serviceWorker.js","index.js"],"names":["KEYS","ListItem","htmlId","onMouseEnter","onMouseLeave","onClick","classList","props","className","join","tabIndex","id","children","getIndexFromID","idPrefix","indexOf","parseInt","replace","Component","withAutomcomplete","name","type","onChange","required","placeholder","value","error","forwardRef","style","border","ref","color","items","renderItem","item","primaryKey","onReady","htmlInput","htmlDiv","onSelect","noResultText","reset","itemIdPrefix","resultsRef","useRef","inputRef","currentChildrenIndex","filteredItemsRef","useEffect","resultsRefConst","current","inputRefConst","addEventListener","handleResultsKeydown","handleInputKeydown","handleInputFocus","width","document","hideResultList","removeEventListener","length","contains","remove","setOpen","useState","open","event","key","toUpperCase","add","el","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","getOffset","handleSelect","index","focus","preventDefault","count","handleMouseEnter","target","handleMouseLeave","handleMouseClick","role","autoComplete","map","Button","text","books","Book","summary","author","_id","this","book","get","getById","Object","keys","Node","bucket","addValue","isEnd","Trie","root","cache","cacheDuration","prototype","word","isNew","currentNode","element","getValues","values","lastNode","getExactMatchLastNode","letter","getAllValuesStartingWith","search","node","letters","clear","words","refineWord","JSON","parse","stringify","toLowerCase","bookController","searchWordStartWith","getBooks","ids","push","data","titles","summaries","authors","split","forEach","rows","wordsCount","searchSummary","referenceIds","commonIds","emptyWordsCount","SearchBox","onSubmit","controller","setValue","setBooks","setBook","handleReady","useCallback","inputHtml","handleReset","aria-label","Cell","Grid","setKey","noItemsMessage","idx","arr","desktopCellSize","SearchHistory","Date","now","aria-labelledby","aria-describedby","slice","SearchHistories","App","newBooks","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.246738a1.chunk.js","sourcesContent":["export const KEYS = {\r\n  ARROWDOWN: \"ARROWDOWN\",\r\n  ARROWUP: \"ARROWUP\",\r\n  ENTER: \"ENTER\",\r\n  ESCAPE: \"ESCAPE\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListItem = ({\r\n  htmlId,\r\n  onMouseEnter = () => {},\r\n  onMouseLeave = () => {},\r\n  onClick = () => {},\r\n  classList = [],\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classList.join(\" \")}\r\n      tabIndex=\"0\"\r\n      id={htmlId}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nListItem.propTypes = {\r\n  /** Unique HTML ID. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string,\r\n\r\n  /** Function to call onChange */\r\n  onMouseEnter: PropTypes.func,\r\n\r\n  /** Function to call onMouseLeave */\r\n  onMouseLeave: PropTypes.func,\r\n\r\n  /** Function to call onClick */\r\n  onClick: PropTypes.func,\r\n\r\n  /** Dynamic classes */\r\n  classList: PropTypes.arrayOf(PropTypes.string),\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ListItem;\r\n","export function getOffset(el) {\r\n  const rect = el.getBoundingClientRect();\r\n  return {\r\n    left: rect.left + window.scrollX,\r\n    top: rect.top + window.scrollY,\r\n  };\r\n}\r\n\r\nexport function getIndexFromID(id, idPrefix) {\r\n  if (id.indexOf(idPrefix) === -1) return -1;\r\n  return parseInt(id.replace(idPrefix, \"\"));\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { KEYS } from \"./keys\";\r\nimport ListItem from \"ui-lib/ListItem\";\r\nimport { getOffset, getIndexFromID } from \"ui-lib/utils\";\r\n\r\n/**\r\n *\r\n * @param {*} Component : Any text input component can be converted to auto complete by\r\n * passing through this HOC. Here in this case SearchBox component is passed through withAutocomplete.\r\n * ON PRESSING [ESC] ITEM LIST CAN BE CLOSED\r\n */\r\nexport const withAutomcomplete = (Component) => {\r\n  return ({\r\n    items = [],\r\n    renderItem = (item) => item,\r\n    primaryKey,\r\n    onReady = (htmlInput, htmlDiv) => {},\r\n    onSelect = (item) => {},\r\n    noResultText = \"No items matches the result.\",\r\n    reset = () => {},\r\n    itemIdPrefix = \"autocomplete-\",\r\n    ...props\r\n  }) => {\r\n    const resultsRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n    const currentChildrenIndex = useRef(0);\r\n    const filteredItemsRef = useRef([]);\r\n\r\n    // const items = useFilter(items, props.value);\r\n\r\n    useEffect(() => {\r\n      const resultsRefConst = resultsRef.current;\r\n      const inputRefConst = inputRef.current;\r\n      resultsRef.current.addEventListener(\"keydown\", handleResultsKeydown);\r\n      inputRef.current.addEventListener(\"keydown\", handleInputKeydown);\r\n      inputRef.current.addEventListener(\"focus\", handleInputFocus);\r\n      resultsRef.current.style.width = inputRef.current.style.width;\r\n      onReady(inputRef.current, resultsRef.current);\r\n      document.addEventListener(\"keydown\", hideResultList);\r\n      return () => {\r\n        resultsRefConst.removeEventListener(\"keydown\", handleResultsKeydown);\r\n        inputRefConst.removeEventListener(\"keydown\", handleInputKeydown);\r\n        inputRefConst.removeEventListener(\"focus\", handleInputFocus);\r\n        document.removeEventListener(\"click\", hideResultList);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      filteredItemsRef.current = items;\r\n      if (items.length) {\r\n        if (resultsRef.current.classList.contains(\"hide\")) {\r\n          resultsRef.current.classList.remove(\"hide\");\r\n        }\r\n        const { children } = resultsRef.current;\r\n        if (\r\n          currentChildrenIndex.current &&\r\n          children[currentChildrenIndex.current]\r\n        ) {\r\n          children[currentChildrenIndex.current].classList.remove(\"active\");\r\n        }\r\n        currentChildrenIndex.current = 0;\r\n      }\r\n      setOpen(items.length ? true : false);\r\n    }, [items]);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    /**\r\n     * COMMON EVENTS FOR MOUSE AND KEYBOARD EVENTS STARTS HERE\r\n     */\r\n    const hideResultList = (event) => {\r\n      const key = event.key.toUpperCase();\r\n      if (key !== KEYS.ESCAPE) return;\r\n      if (!resultsRef.current.classList.contains(\"hide\")) {\r\n        resultsRef.current.classList.add(\"hide\");\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputFocus = (event) => {\r\n      const { left, top } = getOffset(inputRef.current);\r\n      resultsRef.current.style.left = left;\r\n      resultsRef.current.style.top = top;\r\n      if (resultsRef.current.classList.contains(\"hide\")) {\r\n        resultsRef.current.classList.remove(\"hide\");\r\n      }\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleSelect = (index) => {\r\n      const item = filteredItemsRef.current[index];\r\n      inputRef.current.focus();\r\n      onSelect(item);\r\n      if (!resultsRef.current.classList.contains(\"hide\")) {\r\n        resultsRef.current.classList.add(\"hide\");\r\n      }\r\n      setOpen(false);\r\n    };\r\n    /**\r\n     * COMMON EVENTS FOR MOUSE AND KEYBOARD EVENTS ENDS HERE\r\n     */\r\n\r\n    /**\r\n     * KEYBOARD EVENTS HANDLING STARTS FROM HERE\r\n     */\r\n    const handleResultsKeydown = (event) => {\r\n      /** PREVENTING THE SUBMISSION OF THE FORM WRAPPING AROUND THE CONTROL.  */\r\n      event.preventDefault();\r\n      const { children } = resultsRef.current;\r\n      const count = children.length;\r\n      const key = event.key.toUpperCase();\r\n      switch (key) {\r\n        case KEYS.ARROWUP: {\r\n          children[currentChildrenIndex.current].classList.remove(\"active\");\r\n          if (currentChildrenIndex.current === 0) {\r\n            /**\r\n             * REACHED TOP ITEM\r\n             * MOVING FOCUS TO THE INPUT COMPONENT\r\n             */\r\n            inputRef.current.focus();\r\n            return;\r\n          }\r\n          currentChildrenIndex.current--;\r\n          children[currentChildrenIndex.current].classList.add(\"active\");\r\n          return;\r\n        }\r\n        case KEYS.ARROWDOWN: {\r\n          if (currentChildrenIndex.current === count - 1) {\r\n            /**\r\n             * REACHED LAST ITEM\r\n             */\r\n            return;\r\n          }\r\n          children[currentChildrenIndex.current].classList.remove(\"active\");\r\n          currentChildrenIndex.current++;\r\n          children[currentChildrenIndex.current].classList.add(\"active\");\r\n          return;\r\n        }\r\n        case KEYS.ENTER: {\r\n          children[currentChildrenIndex.current].classList.remove(\"active\");\r\n          handleSelect(currentChildrenIndex.current);\r\n          return;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    const handleInputKeydown = (event) => {\r\n      const { children } = resultsRef.current;\r\n      const key = event.key.toUpperCase();\r\n      if (key === KEYS.ARROWDOWN && children.length) {\r\n        children[currentChildrenIndex.current].focus();\r\n        children[currentChildrenIndex.current].classList.add(\"active\");\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * KEYBOARD EVENTS HANDLING ENDS HERE\r\n     */\r\n\r\n    /**\r\n     * MOUSE EVENTS HANDLING STARTS FROM HERE\r\n     */\r\n    const handleMouseEnter = ({ target }) => {\r\n      const { id } = target;\r\n      const index = getIndexFromID(id, itemIdPrefix);\r\n\r\n      const { children } = resultsRef.current;\r\n      children[currentChildrenIndex.current].classList.remove(\"active\");\r\n\r\n      if (!children[index]) return;\r\n      currentChildrenIndex.current = index;\r\n      children[currentChildrenIndex.current].classList.add(\"active\");\r\n    };\r\n\r\n    const handleMouseLeave = ({ target }) => {\r\n      const { id } = target;\r\n      const index = getIndexFromID(id, itemIdPrefix);\r\n\r\n      const { children } = resultsRef.current;\r\n\r\n      if (!children[index]) return;\r\n      currentChildrenIndex.current = index;\r\n      children[currentChildrenIndex.current].classList.remove(\"active\");\r\n    };\r\n\r\n    const handleMouseClick = ({ target }) => {\r\n      const { id } = target;\r\n      const index = getIndexFromID(id, itemIdPrefix);\r\n\r\n      const { children } = resultsRef.current;\r\n\r\n      if (!children[index]) return;\r\n      currentChildrenIndex.current = index;\r\n      children[currentChildrenIndex.current].classList.remove(\"active\");\r\n      handleSelect(currentChildrenIndex.current);\r\n    };\r\n\r\n    /**\r\n     * MOUSE EVENTS HANDLING ENDS HERE\r\n     */\r\n\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <span className=\"autocomplete__clear__text\" onClick={reset}>\r\n          X\r\n        </span>\r\n        <Component\r\n          {...props}\r\n          {...{\r\n            role: \"combobox\",\r\n            \"aria-autocomplete\": \"list\",\r\n            \"aria-expanded\": open,\r\n            autoComplete: \"off\",\r\n          }}\r\n          forwardRef={inputRef}\r\n        />\r\n        <div className=\"autocomplete__results\" ref={resultsRef} tabIndex=\"0\">\r\n          {items.map((item, index) => {\r\n            return (\r\n              <ListItem\r\n                key={primaryKey ? item[primaryKey] : index}\r\n                {...item}\r\n                htmlId={`${itemIdPrefix}${index}`}\r\n                onMouseEnter={handleMouseEnter}\r\n                onMouseLeave={handleMouseLeave}\r\n                onClick={handleMouseClick}\r\n                classList={[`autocomplete__result`]}\r\n              >\r\n                {renderItem(item)}\r\n              </ListItem>\r\n            );\r\n          })}\r\n          {props.value && !items.length ? (\r\n            <div className=\"autocomplete__no__results\">{noResultText}</div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import { withAutomcomplete } from \"./HOC/withAutocomplete\";\r\nimport TextInput from \"ui-lib/TextInput\";\r\n\r\nexport default withAutomcomplete(TextInput);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.*/\r\nconst TextInput = ({\r\n  htmlId,\r\n  name,\r\n  type = \"text\",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  forwardRef,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <>\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        style={error && { border: \"solid 1px red\" }}\r\n        ref={forwardRef}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && (\r\n        <div className=\"error\" style={{ color: \"red\" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf([\"text\", \"number\", \"password\"]),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({\r\n  onClick = () => {},\r\n  classList = [],\r\n  text,\r\n  type = \"submit\",\r\n  htmlId,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <button\r\n      className={classList.join(\" \")}\r\n      onClick={onClick}\r\n      type={type}\r\n      {...props}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf([\"submit\", \"button\", \"reset\"]),\r\n\r\n  /** Function to call onClick */\r\n  onClick: PropTypes.func,\r\n\r\n  /** Text to display */\r\n  text: PropTypes.string,\r\n\r\n  /** Css Classes */\r\n  classList: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default Button;\r\n","let books = {};\r\nlet id = 0;\r\nclass Book {\r\n  _id = 0;\r\n  name = \"\";\r\n  summary = \"\";\r\n  author = \"\";\r\n  constructor(name, summary, author) {\r\n    this._id = ++id;\r\n    this.name = name;\r\n    this.summary = summary;\r\n    this.author = author;\r\n  }\r\n}\r\n\r\nBook.add = function (book) {\r\n  books[book._id] = book;\r\n  return book._id;\r\n};\r\n\r\nBook.get = function () {\r\n  return books;\r\n};\r\n\r\nBook.getById = function (id) {\r\n  return books[id] ? books[id] : null;\r\n};\r\n\r\nBook.reset = function () {\r\n  id = 0;\r\n  books = {};\r\n};\r\n\r\nBook.count = function () {\r\n  return Object.keys(books).length;\r\n};\r\n\r\nexport default Book;\r\n","const Node = function () {\r\n  this.bucket = {};\r\n  this.map = {};\r\n  this.addValue = (value) => {\r\n    this.bucket[value] = true;\r\n  };\r\n  this.isEnd = () => {\r\n    return Object.keys(this.bucket).length > 0;\r\n  };\r\n};\r\n\r\nconst Trie = function () {\r\n  this.count = 0;\r\n  this.root = new Node();\r\n  this.cache = {}; // To be done\r\n  this.cacheDuration = 1000; // To be done\r\n};\r\n\r\nTrie.prototype.add = function (word, value) {\r\n  let isNew = false;\r\n  let currentNode = null;\r\n  /*\r\n  if (this.cache[word]) {\r\n    currentNode = this.cache[word];\r\n    currentNode.addValue(value);\r\n    return;\r\n  }\r\n  */\r\n  for (let index = 0; index < word.length; index++) {\r\n    const element = word[index];\r\n    if (currentNode === null) {\r\n      currentNode = this.root;\r\n    }\r\n    if (!currentNode.map[element]) {\r\n      isNew = true;\r\n      currentNode.map[element] = new Node();\r\n    }\r\n    currentNode = currentNode.map[element];\r\n    if (index === word.length - 1) {\r\n      currentNode.addValue(value);\r\n    }\r\n  }\r\n  if (isNew) {\r\n    this.count++;\r\n  }\r\n};\r\n\r\nTrie.prototype.getValues = function (word) {\r\n  let values = [];\r\n  let lastNode = this.getExactMatchLastNode(word);\r\n  if (lastNode) {\r\n    values = Object.keys(lastNode.bucket);\r\n  }\r\n  return values;\r\n};\r\n\r\nTrie.prototype.getExactMatchLastNode = function (word) {\r\n  let lastNode = null;\r\n  for (let index = 0; index < word.length; index++) {\r\n    const letter = word[index];\r\n    if (lastNode === null) {\r\n      lastNode = this.root;\r\n    }\r\n    if (!lastNode.map[letter]) {\r\n      lastNode = null;\r\n      break;\r\n    }\r\n    lastNode = lastNode.map[letter];\r\n  }\r\n  return lastNode;\r\n};\r\n\r\nTrie.prototype.getAllValuesStartingWith = function (word) {\r\n  const lastNode = this.getExactMatchLastNode(word);\r\n  if (!lastNode) return [];\r\n  if (lastNode == this.root) return [];\r\n\r\n  let values = {};\r\n\r\n  function search(node) {\r\n    values = { ...values, ...node.bucket };\r\n    const letters = Object.keys(node.map);\r\n    if (letters.length) {\r\n      for (const letter of letters) {\r\n        search(node.map[letter]);\r\n      }\r\n    }\r\n  }\r\n  search(lastNode);\r\n\r\n  return Object.keys(values);\r\n};\r\n\r\nTrie.prototype.clear = function () {\r\n  this.root = new Node();\r\n  this.count = 0;\r\n};\r\n\r\nexport default Trie;\r\n","import Trie from \"lib/Trie\";\r\n\r\nconst words = new Trie();\r\nexport const add = function (word, id) {\r\n  words.add(word, id);\r\n};\r\n\r\nexport const getValues = function (word) {\r\n  return words.getValues(word);\r\n};\r\n\r\nexport const getAllValuesStartingWith = function (word) {\r\n  return words.getAllValuesStartingWith(word);\r\n};\r\n\r\nexport const count = function () {\r\n  return words.count;\r\n};\r\n","export const refineWord = (word) => {\r\n  word = JSON.parse(JSON.stringify(word));\r\n  return word.replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\r\n};\r\n","import Book from \"api/Models/book\";\r\nimport {\r\n  add,\r\n  getValues,\r\n  count,\r\n  getAllValuesStartingWith,\r\n} from \"api/Models/search\";\r\nimport { refineWord } from \"./utils\";\r\n\r\nconst bookController = function () {\r\n  function addBooks(data) {\r\n    const { titles, summaries, authors } = data;\r\n    for (let index = 0; index < titles.length; index++) {\r\n      const book = new Book(\r\n        titles[index],\r\n        summaries[index].summary,\r\n        authors[index].author\r\n      );\r\n      const id = Book.add(book);\r\n      summaries[index].summary.split(/\\s+/).forEach((word) => {\r\n        add(refineWord(word), id);\r\n      });\r\n    }\r\n    return { rows: Book.count() };\r\n  }\r\n\r\n  function search(word) {\r\n    return getValues(refineWord(word));\r\n  }\r\n\r\n  function searchWordStartWith(word) {\r\n    return getAllValuesStartingWith(refineWord(word));\r\n  }\r\n\r\n  function searchSummary(summary) {\r\n    let referenceIds = {};\r\n    let commonIds = {};\r\n    let emptyWordsCount = 0;\r\n    const words = summary.split(/\\s+/);\r\n\r\n    for (let index = 0; index < words.length; index++) {\r\n      const word = words[index];\r\n      if (!word) {\r\n        emptyWordsCount++;\r\n        continue;\r\n      }\r\n      // const ids = search(word);\r\n      const ids =\r\n        index < words.length - 1 ? search(word) : searchWordStartWith(word);\r\n      ids.forEach((id) => {\r\n        if (!referenceIds[id]) {\r\n          referenceIds[id] = [];\r\n        }\r\n        referenceIds[id].push(word);\r\n      });\r\n    }\r\n\r\n    Object.keys(referenceIds).forEach((id) => {\r\n      if (referenceIds[id].length === words.length - emptyWordsCount) {\r\n        commonIds[id] = true;\r\n      }\r\n    });\r\n\r\n    return { books: getBooks(Object.keys(commonIds)) };\r\n  }\r\n\r\n  function getBooks(ids) {\r\n    if (!ids) {\r\n      return Book.get();\r\n    }\r\n    let books = [];\r\n    for (const id of ids) {\r\n      const book = Book.getById(id);\r\n      if (!book) continue;\r\n      books.push(book);\r\n    }\r\n    return books;\r\n  }\r\n\r\n  function wordsCount() {\r\n    return count();\r\n  }\r\n\r\n  return {\r\n    add: addBooks,\r\n    search,\r\n    get: getBooks,\r\n    wordsCount,\r\n    searchSummary,\r\n    searchWordStartWith,\r\n  };\r\n};\r\n\r\nexport default bookController;\r\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport data from \"tools/data.json\";\r\nimport Autocomplete from \"ui-lib/Autocomplete\";\r\nimport Button from \"ui-lib/Button\";\r\nimport bookController from \"api/controllers/bookController/bookController\";\r\n\r\nconst SearchBox = ({ onSubmit }) => {\r\n  const controller = useRef(bookController());\r\n  const [value, setValue] = useState(\"\");\r\n  const [books, setBooks] = useState([]);\r\n  const [book, setBook] = useState(null);\r\n  useEffect(() => {\r\n    controller.current.add(data);\r\n  }, []);\r\n  const handleChange = ({ target }) => {\r\n    setValue(target.value);\r\n    setBook(null);\r\n    const { books } = controller.current.searchSummary(target.value);\r\n    if (!books) return;\r\n    setBooks(books);\r\n  };\r\n  const handleReady = useCallback((inputHtml) => {\r\n    inputHtml.focus();\r\n  }, []);\r\n\r\n  const handleSelect = (book) => {\r\n    setBook(book);\r\n    if (!book) return;\r\n    setValue(book.name);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setValue(\"\");\r\n    setBook(null);\r\n    setBooks([]);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmit(book);\r\n    handleReset();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} role=\"search\" className=\"form\">\r\n      <Autocomplete\r\n        items={books}\r\n        value={value}\r\n        primaryKey={\"_id\"}\r\n        onChange={handleChange}\r\n        renderItem={(book) => {\r\n          return <>{book.name}</>;\r\n        }}\r\n        onReady={handleReady}\r\n        onSelect={handleSelect}\r\n        noResultText=\"No Book Found\"\r\n        reset={handleReset}\r\n        aria-label=\"search text\"\r\n      />\r\n      <Button text={\"Submit\"} value=\"Search\" classList={[\"btn\"]} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Cell = ({ classList, children }) => {\r\n  return (\r\n    <div role=\"gridcell\" className={classList.join(\" \")}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Cell from \"ui-lib/Cell\";\r\n\r\nconst Grid = ({\r\n  items = [],\r\n  renderItem = (item) => item,\r\n  setKey = (item, index) => index,\r\n  noItemsMessage = () => \"No items.\",\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={\"row\"} role=\"grid\">\r\n        {items.map((item, idx, arr) => {\r\n          let desktopCellSize = 4;\r\n          if (\r\n            (arr.length > 3 && idx === arr.length - 1 && idx % 3 === 0) ||\r\n            arr.length === 1\r\n          ) {\r\n            desktopCellSize = 12;\r\n          }\r\n\r\n          if (\r\n            (arr.length > 3 && idx === arr.length - 1 && idx % 3 === 1) ||\r\n            arr.length === 2\r\n          ) {\r\n            desktopCellSize = 6;\r\n          }\r\n\r\n          if (arr.length > 3 && idx === arr.length - 2 && idx % 3 === 0) {\r\n            desktopCellSize = 6;\r\n          }\r\n          return (\r\n            <Cell\r\n              classList={[`col-6`, `col-md-${desktopCellSize}`]}\r\n              key={setKey(item, idx)}\r\n            >\r\n              {renderItem(item)}\r\n            </Cell>\r\n          );\r\n        })}\r\n      </div>\r\n      {items.length ? null : <div role=\"alert\">{noItemsMessage()}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  /** Contain data for a Cell to be rendered under the grid */\r\n  items: PropTypes.array,\r\n  /** Describes the way how you render a cell */\r\n  renderItem: PropTypes.func,\r\n  /** Simplifies to displays the no items message . */\r\n  noItemsMessage: PropTypes.func,\r\n  /** Exposing api to set the key of an item by the user. */\r\n  setKey: PropTypes.func,\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchHistory = ({ name, summary, author, _id }) => {\r\n  return (\r\n    <div\r\n      tabIndex=\"0\"\r\n      id={`history__block__${_id}__${Date.now()}`}\r\n      className={`history__block`}\r\n      aria-labelledby={`history__block__${_id}__${Date.now()}--name`}\r\n      aria-describedby={`history__block__${_id}__${Date.now()}--summary`}\r\n    >\r\n      <h2\r\n        id={`history__block__${_id}__${Date.now()}--name`}\r\n        className={`history__block--name`}\r\n      >\r\n        {name}\r\n      </h2>\r\n      <p\r\n        id={`history__block__${_id}__${Date.now()}--summary`}\r\n        className={`history__block--summary`}\r\n      >\r\n        {`${summary.slice(0, 149)} ...`}\r\n      </p>\r\n      <hr />\r\n      <p aria-label={`author ${author}`} className={`history__block--author`}>\r\n        {author}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchHistory.propTypes = {\r\n  /** Unique HTML ID. Handy hook for automated testing. */\r\n  name: PropTypes.string,\r\n\r\n  /** Function to call onChange */\r\n  summary: PropTypes.func.isRequired,\r\n\r\n  /** Function to call onChange */\r\n  author: PropTypes.func.isRequired,\r\n\r\n  /** Child component to display next to the input */\r\n  _id: PropTypes.number,\r\n};\r\n\r\nexport default SearchHistory;\r\n","import React from \"react\";\r\nimport Grid from \"ui-lib/Grid\";\r\nimport SearchHistory from \"../SearchHistory\";\r\n\r\nconst SearchHistories = ({ books }) => {\r\n  return (\r\n    <Grid\r\n      items={books}\r\n      noItemsMessage={() => (\r\n        <div className=\"grid__no_item_message\">No Books Selected</div>\r\n      )}\r\n      setKey={(item) => {\r\n        return `cell-${item._id}-${Date.now()}`;\r\n      }}\r\n      renderItem={(book) => <SearchHistory {...book} />}\r\n    ></Grid>\r\n  );\r\n};\r\n\r\nexport default SearchHistories;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SearchBox from \"./pages/SearchBox\";\nimport SearchHistories from \"./pages/SearchHistories\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const handleSubmit = (book) => {\n    if (!book) return;\n    const newBooks = [...books, book];\n    setBooks([...newBooks]);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Search Books</h1>\n      <SearchBox onSubmit={handleSubmit} />\n      <SearchHistories books={books} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}